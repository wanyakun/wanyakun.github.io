(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{624:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"任务和队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务和队列"}},[t._v("#")]),t._v(" 任务和队列")]),t._v(" "),a("h3",{attrs:{id:"任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务"}},[t._v("#")]),t._v(" 任务")]),t._v(" "),a("p",[t._v("任务就是需要执行的操作，是GCD中放在block中在线程中执行的那段代码。"),a("br"),t._v("\n任务的执行的方式有同步执行和异步执行两中执行方式。")]),t._v(" "),a("ul",[a("li",[t._v("同步执行：dispatch_sync 阻塞当前线程，直到当前添加到队列中的任务执行结束，才继续往下执行。")]),t._v(" "),a("li",[t._v("异步执行：dispatch_async 不阻塞当前线程")])]),t._v(" "),a("h3",{attrs:{id:"队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),a("p",[t._v("在GCD里面队列是指执行任务的等待队列，是用来存放任务的。队列的结构按照FIFO（先进先出）的原则进行执行。GCD的队列分为串行队列和并发队列两种")]),t._v(" "),a("ul",[a("li",[t._v("串行队列：只开启一个线程，每次只能有一个任务执行，等待执行完毕后才会执行下一个任务")]),t._v(" "),a("li",[t._v("并发队列：可以让多个任务同时执行，也就是开启多个线程，让多个任务同时执行。")])]),t._v(" "),a("p",[a("strong",[t._v("注意：")]),t._v("\ndispatch_async异步调用情况\n串行队列：是overcommit的，创建队列会创建1个新的线程\n并发队列：是非overcommit的，不一定会创建新线程，会从线程池的64个线程中获取并使用。所以避免在循环或者递归中新建串行队列。串行队列的会创建新线程，最多512个（不算主线程，number从4开始到515）")]),t._v(" "),a("h3",{attrs:{id:"任务和队列的组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务和队列的组合"}},[t._v("#")]),t._v(" 任务和队列的组合")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("同步执行")]),t._v(" "),a("th",[t._v("异步执行")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("串行队列")]),t._v(" "),a("td",[t._v("同步任务不会开启新的线程，任务串行执行")]),t._v(" "),a("td",[t._v("异步任务有开启新的线程，任务串行执行")])]),t._v(" "),a("tr",[a("td",[t._v("并行队列")]),t._v(" "),a("td",[t._v("同步任务不会开启新的线程，虽然任务在并发队列中，但是系统只默认开启了一个主线程，没有开启子线程，所以任务串行执行")]),t._v(" "),a("td",[t._v("异步任务不一定有开启新的线程，会从线程池的64个线程中获取并使用")])]),t._v(" "),a("tr",[a("td",[t._v("主队列")]),t._v(" "),a("td",[t._v("主队列是一种串行队列，任务在主线程中串行执行，将同步任务添加到主队列中会造成追加的同步任务和主线程中的任务相互等待阻塞主线程，导致死锁")]),t._v(" "),a("td",[t._v("主队列是一种串行队列，任务在主线程中串行执行，即使是追加的异步任务也不会开启新的线程，任务串行执行。")])])])]),t._v(" "),a("h3",{attrs:{id:"线程池"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[t._v("#")]),t._v(" 线程池")]),t._v(" "),a("p",[t._v("dispatch_queue 是GCD实现的一种线程池技术。不管是自定义队列、全局队列还是主队列，最终都直接或者间接的依赖12个root队列来执行任务调度。如果按照label来计算总共16个，除上面的12个，就是com.apple.main-thread，还有两个内部管理队列com.apple.libdispatch-manager和com.apple.root.libdispatch-manager，以及runloop的运行队列")]),t._v(" "),a("p",[t._v("一、 全局线程池")]),t._v(" "),a("ol",[a("li",[t._v("主线程池：main queue")]),t._v(" "),a("li",[t._v("其他线程池：")])]),t._v(" "),a("ul",[a("li",[t._v("DISPATCH_QUEUE_PRIORITY_HIGH")]),t._v(" "),a("li",[t._v("DISPATCH_QUEUE_PRIORITY_DEFAULT")]),t._v(" "),a("li",[t._v("DISPATCH_QUEUE_PRIORITY_LOW")]),t._v(" "),a("li",[t._v("DISPATCH_QUEUE_PRIORITY_BACKGROUND")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("一个池最多支持几个线程同时工作？"),a("br"),t._v("\n64个")])]),t._v(" "),a("p",[t._v("二、自定义线程池")]),t._v(" "),a("p",[t._v("自己创建的queue跟系统的4个全局池模式一样，也是最多64个线程")]),t._v(" "),a("h2",{attrs:{id:"函数方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数方法"}},[t._v("#")]),t._v(" 函数方法")]),t._v(" "),a("h3",{attrs:{id:"dispatch-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-group"}},[t._v("#")]),t._v(" dispatch_group")]),t._v(" "),a("p",[t._v("调度组简单来说就是把异步执行的任务进行分组，等待所有的分组任务都执行完毕后再回到指定的线程执行任务"),a("br"),t._v("\ndispatch_group_a/sync"),a("br"),t._v("\ndispatch_group可以将很多队列添加到一个组，当这个组里所有的任务都执行完了，队列组会通过一个方法通知我们。")]),t._v(" "),a("ol",[a("li",[t._v("dispatch_group是一个初始值为LONG_MAX到信号量，group中的任务完成是判断value是否恢复成初始值")]),t._v(" "),a("li",[t._v("dispatch_group_enter和dispatch_group_leave必须成对使用并支持嵌套")]),t._v(" "),a("li",[t._v("如果dispatch_group_enter比dispatch_group_leave多，由于value不等于初始值（dsema_orig）不会走到唤醒逻辑，dispatch_group_notify中的任务无法执行或者dispatch_group_wait收不到信号而卡住线程。如果是dispatch_group_leave多，则会引起崩溃。")])]),t._v(" "),a("h3",{attrs:{id:"dispatch-barrier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-barrier"}},[t._v("#")]),t._v(" dispatch_barrier")]),t._v(" "),a("p",[t._v("有的时候我们需要异步执行两组操作，等待第一组执行完成后才回去执行第二组操作，这个时候栅栏方法就起作用了."),a("br"),t._v("\n简单来说dispatch_barrier_async或dispatch_barrier_sync将异步任务分成了两个组，执行完第一组后，再执行自己，然后执行队列中剩余的任务")]),t._v(" "),a("p",[t._v("dispatch_barrier允许在一个并发队列中创建一个同步点。当在并发队列中遇到barrier，它会延迟执行barrier的block，等待所有在barrier之前提交的blocks执行结束。这时，barrier block自己开始执行。之后，队列继续正常执行操作。"),a("br"),t._v("\n这里所指的并发队列应该是自己通过dispatch_queue_create函数创建的。如果你传的是一个串行队列或者全局并发队列，这个函数就等同于dispatch_a/sync函数。")]),t._v(" "),a("h3",{attrs:{id:"dispatch-semaphore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-semaphore"}},[t._v("#")]),t._v(" dispatch_semaphore")]),t._v(" "),a("p",[t._v("GCD中的信号量是持有计数的信号。当信号量小于0时就会一直等待即阻塞所在线程，否则就可以正常执行。信号量可以保持线程的同步，将异步执行任务转换成同步任务执行， 同时保持线程的安全。")]),t._v(" "),a("ul",[a("li",[t._v("dispatch_semaphore_create：创建一个 Semaphore 并初始化信号的总量")]),t._v(" "),a("li",[t._v("dispatch_semaphore_signal：发送一个信号，让信号总量加 1")]),t._v(" "),a("li",[t._v("dispatch_semaphore_wait：可以使总信号量减 1，信号总量小于 0 时就会一直等待（阻塞所在线程），否则就可以正常执行。")])]),t._v(" "),a("h3",{attrs:{id:"dispatch-after"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-after"}},[t._v("#")]),t._v(" dispatch_after")]),t._v(" "),a("p",[t._v("dispatch_after 方法并不是在指定时间之后才开始执行处理，而是在指定时间之后将任务追加到主队列中")]),t._v(" "),a("h3",{attrs:{id:"dispatch-once"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-once"}},[t._v("#")]),t._v(" dispatch_once")]),t._v(" "),a("p",[t._v("GCD提供了只执行一次的方法dispatch_once，这个方法在我们创建单例的时候回经常用到。dispatch_once方法可以保证一段代码在程序运行过程中只被调用一次，而且在多线程环境下可以保证线程安全。")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instancetype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("shareInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" XXX "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" dispatch_once_t onceToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_once")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("onceToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("XXX alloc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h3",{attrs:{id:"dispatch-source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-source"}},[t._v("#")]),t._v(" dispatch_source")]),t._v(" "),a("p",[a("a",{attrs:{href:"/blogs/code/2016/2016-12-20-ios-dispatch-source"}},[t._v("调度源")])]),t._v(" "),a("h2",{attrs:{id:"死锁场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#死锁场景"}},[t._v("#")]),t._v(" 死锁场景")]),t._v(" "),a("p",[t._v("死锁主要出现在同步执行 + 串行队列里")]),t._v(" "),a("h3",{attrs:{id:"场景一-同步-主队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景一-同步-主队列"}},[t._v("#")]),t._v(" 场景一：同步+主队列")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_sync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_get_main_queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"同步线程执行主队列任务"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ol",[a("li",[t._v("执行task1")]),t._v(" "),a("li",[t._v("阻塞同步线程，把task2加入到主队列的队尾")]),t._v(" "),a("li",[t._v("task3需要等待task2执行完成后执行，但是此时task2又排在task3后面，所以造成了死锁")])]),t._v(" "),a("h3",{attrs:{id:"场景二-异步串行队列嵌套同步串行队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景二-异步串行队列嵌套同步串行队列"}},[t._v("#")]),t._v(" 场景二：异步串行队列嵌套同步串行队列")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[t._v("dispatch_queue_t myQueue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_queue_create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.bg.sQueue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DISPATCH_QUEUE_SERIAL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_sync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" task5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("ol",[a("li",[t._v("执行task1")]),t._v(" "),a("li",[t._v("执行task5")]),t._v(" "),a("li",[t._v("执行task2")]),t._v(" "),a("li",[t._v("阻塞同步线程，把task3加入到队列myQueue的队尾")]),t._v(" "),a("li",[t._v("task4需要等待task3执行完成后执行，但是此时task3又排在task4后面，所以造成了死锁")])]),t._v(" "),a("h3",{attrs:{id:"场景三-信号量阻塞主线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景三-信号量阻塞主线程"}},[t._v("#")]),t._v(" 场景三：信号量阻塞主线程")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[t._v("dispatch_semaphore_t sem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_get_main_queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"the sem +1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DISPATCH_TIME_FOREVER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"the sem -1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("主线程中dispatch_semaphore_wait一直等着dispatch_semaphore_signal改变信号量（+1操作），但是dispatch_semaphore_wait却阻塞了主线程导致dispatch_semaphore_signal无法执行，从而造成了死锁。")])])}),[],!1,null,null,null);s.default=e.exports}}]);