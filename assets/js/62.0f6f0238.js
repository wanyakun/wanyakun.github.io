(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{505:function(t,s,a){"use strict";a.r(s);var n=a(7),e=function(t){t.options.__data__block__={flowchart_64a558ee:"st=>start: 开始\ncond1=>condition: receiver是否为nil\ncond2=>condition: 是否从receiver的\ncache中找到方法\ncond3=>condition: 是否从receiver的\nclass_rw_t中找到方法\ncond4=>condition: 是否从superClass的\ncache中找到方法\ncond5=>condition: 是否从superClass的\nclass_rw_t中找到方法\ncond6=>condition: superClass是否\n还存在父类\ne1=>end: 退出\ne2=>end: 调用方法，结束查找\ne3=>end: 调用方法，结束查找。\n并将方法换成到receiverClass\n的cache中\ne4=>end: 动态方法解析\n\nst->cond1\ncond1(yes, right)->e1\ncond1(no, bottom)->cond2\ncond2(yes, right)->e2\ncond2(no, bottom)->cond3\ncond3(yes, right)->e3\ncond3(no, bottom)->cond4\ncond4(yes, right)->e3\ncond4(no, bottom)->cond5\ncond5(yes, right)->e3\ncond5(no, left)->cond6\ncond6(yes, top)->cond4\ncond6(no, bottom)->e4",flowchart_64a558a4:"st=>start: 开始\ncond=>condition: 是否已经动态解析？\ne1=>end: 消息转发\ne2=>end: 消息发送\no1=>operation: 调用+resolveInstanceMethod：\n或+resolveClassMehtod：方法\n来动态解析方法\no2=>operation: 标记为已经动态解析\n\nst->cond\ncond(yes)->e1\ncond(no)->o1->o2->e2",flowchart_64a55830:"st=>start: 开始\no1=>operation: 调用forwardingTargetForSelector:方法\no2=>operation: 调用methodSignatureForSelector:方法\ncond1=>condition: 返回值是否为非nil\n且非self？\ncond2=>condition: 返回值是否为nil？\ne1=>end: objc_msgSend(返回值, SEL)\ne2=>end: 调用forwardInvocation:方法\ne3=>end: 调用doesNotRecognizeSelector:方法\n\nst->o1->cond1\ncond1(yes)->e1\ncond1(no)->o2->cond2\ncond2(yes)->e2\ncond2(no)->e3"}},r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Objective-C 语言是一门动态语言。它把一些决策从编译阶段、链接阶段推迟到运行时阶段")]),t._v(" "),a("ul",[a("li",[t._v("静态语言：在编译阶段就已确定所有变量的数据类型，同时也确定要调用的函数，以及函数的实现。常见的静态语言，如：C/C++、Java、C# 等。")]),t._v(" "),a("li",[t._v("动态语言：程序在运行时可以改变其结构。也就是说在运行时检查变量数据类型，同时在运行时才会根据函数名查找要调用的具体函数。如 Objective-C。")])]),t._v(" "),a("h2",{attrs:{id:"isa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isa"}},[t._v("#")]),t._v(" isa")]),t._v(" "),a("ul",[a("li",[t._v("在arm64架构之前，isa就是一个普通的指针，存储着Class、Meta-Class对象的内存地址")]),t._v(" "),a("li",[t._v("从arm64架构开始，对isa进行了优化，变成了一个联合体（union）结构，还使用位域来存储更多的信息")])]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" objc_object "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nprivate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    isa_t isa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8 bytes")]),t._v("\npublic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" isa_t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Class cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uintptr_t bits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ISA_BITFIELD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ISA_BITFIELD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// defined in isa.h")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("ISA_BITFIELD的定义如下")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__arm64__")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("ISA_MASK")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0000000ffffffff8ULL")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("ISA_MAGIC_MASK")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x000003f000000001ULL")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("ISA_MAGIC_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x000001a000000001ULL")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("ISA_BITFIELD")]),t._v("                                                      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t nonpointer        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t has_assoc         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t has_cxx_dtor      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t shiftcls          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*MACH_VM_MAX_ADDRESS 0x1000000000*/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t magic             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t weakly_referenced "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t deallocating      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t has_sidetable_rc  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("uintptr_t extra_rc          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("RC_ONE")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1ULL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("RC_HALF")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1ULL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("联合体 isa_t 涉及到一个位域的概念.")]),t._v(" "),a("blockquote",[a("p",[t._v("因为部分数据在存储时候并不需要占用一个完整的字节，只需要占用一个或几个二进制位即可。正是基于这种考虑，C语言又提供了一种叫做位域的数据结构。")])]),t._v(" "),a("p",[t._v("这里 ISA_BITFIELD 位域成员通过跟 bits 相与来取对应的值。"),a("br"),t._v("\n在 ISA_BITFIELD 中定义的参数的含义")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/ios/runtime/isa-bitfield.png",alt:"ISA_BITFIELD"}})]),t._v(" "),a("h2",{attrs:{id:"类的结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的结构"}},[t._v("#")]),t._v(" 类的结构")]),t._v(" "),a("h3",{attrs:{id:"objc-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objc-class"}},[t._v("#")]),t._v(" objc_class")]),t._v(" "),a("p",[t._v("Objective-C 类是由 Class 类型来表示的"),a("br"),t._v("\ntypedef struct objc_class *Class;可以看到Class是一个objc_class的指针")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" objc_class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" objc_object "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class isa; 继承自objc_object")]),t._v("\n  Class superclass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cache_t cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// formerly cache pointer and vtable")]),t._v("\n  class_data_bits_t bits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户获取具体类信息")]),t._v("\n  class_rw_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("objc_class 继承自objc_object ，主要是继承了一个isa")]),t._v(" "),a("h3",{attrs:{id:"class-rw-t-结构体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-rw-t-结构体"}},[t._v("#")]),t._v(" class_rw_t 结构体")]),t._v(" "),a("p",[t._v("通过 objc_class 的 bits & FAST_DATA_MASK 获取到 class_rw_t 结构体信息")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[t._v("class_rw_t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_rw_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" FAST_DATA_MASK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" class_rw_t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint32_t flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uint16_t witness"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("SUPPORT_INDEXED_ISA")])]),t._v("\n    uint16_t index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explicit_atomic 是为了安全操作")]),t._v("\n    explicit_atomic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uintptr_t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ro_or_rw_ext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Class firstSubclass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Class nextSiblingClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" class_rw_ext_t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// class_rw_t 扩展")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" class_ro_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ro"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    method_array_t methods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    property_array_t properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    protocol_array_t protocols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("demangledName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uint32_t version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[t._v("class_rw_t 里面的 methods、properties、protocols 是二维数组，是可读可写的，包含了类的初始内容、分类的内容.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/ios/runtime/class-rw-t.png",alt:"class_rw_t"}})]),t._v(" "),a("h3",{attrs:{id:"class-ro-t-结构体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-ro-t-结构体"}},[t._v("#")]),t._v(" class_ro_t 结构体")]),t._v(" "),a("p",[t._v("上述的 class_rw_ext_t 中 class_ro_t 结构体信息：")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" class_ro_t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint32_t flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uint32_t instanceStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uint32_t instanceSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__LP64__")])]),t._v("\n    uint32_t reserved"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uint8_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ivarLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    method_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" baseMethodList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    protocol_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" baseProtocols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ivar_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ivars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uint8_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" weakIvarLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    property_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("baseProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("class_ro_t 里面的 baseMethodList、baseProtocols、ivars、baseProperties 是一维数组，是只读的，存储了当前类在编译器就已经确定了都属性、方法及遵循的协议")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/ios/runtime/class-ro-t.png",alt:"class_ro_t"}})]),t._v(" "),a("h3",{attrs:{id:"method-t-结构体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#method-t-结构体"}},[t._v("#")]),t._v(" method_t 结构体")]),t._v(" "),a("p",[t._v("method_t 是对方法、函数的封装")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[t._v("using MethodListIMP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" method_t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    SEL name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法、函数名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编码 （返回值类型、参数类型）")]),t._v("\n    MethodListIMP imp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向方法、函数的指针（函数地址）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h4",{attrs:{id:"imp属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#imp属性"}},[t._v("#")]),t._v(" imp属性")]),t._v(" "),a("p",[t._v("method_t 结构体中的 imp 代表函数的具体实现，底层源码中的定义如下：")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("OBJC_OLD_DISPATCH_PROTOTYPES")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("IMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* id, SEL, ... */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_Nullable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("IMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id _Nonnull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SEL _Nonnull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"sel-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sel-属性"}},[t._v("#")]),t._v(" SEL 属性")]),t._v(" "),a("p",[t._v("SEL 代表方法、函数名，一般叫做选择器，底层结构跟 char * 类似")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" objc_selector "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("SEL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("获取方法：")]),t._v(" "),a("ul",[a("li",[t._v("可以通过 @selector() 和 sel_registerName() 获得")]),t._v(" "),a("li",[t._v("可以通过 sel_getName() 和 NSStringFromSelector() 转成字符串")]),t._v(" "),a("li",[t._v("不同类中相同名字的方法，所对应的方法选择器是相同的")])]),t._v(" "),a("h4",{attrs:{id:"types属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types属性"}},[t._v("#")]),t._v(" types属性")]),t._v(" "),a("p",[t._v("这个 types 值表示什么呢？iOS 中提供了一个叫做 @encode 的指令，可以将具体的类型表示成字符串编码")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Code")]),t._v(" "),a("th",[t._v("Meaning")]),t._v(" "),a("th",[t._v("Code")]),t._v(" "),a("th",[t._v("Meaning")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("c")]),t._v(" "),a("td",[t._v("A char")]),t._v(" "),a("td",[t._v("*")]),t._v(" "),a("td",[t._v("A character string (char *)")])]),t._v(" "),a("tr",[a("td",[t._v("i")]),t._v(" "),a("td",[t._v("An int")]),t._v(" "),a("td",[t._v("@")]),t._v(" "),a("td",[t._v("An object (whether statically typed or typed id)")])]),t._v(" "),a("tr",[a("td",[t._v("s")]),t._v(" "),a("td",[t._v("A short")]),t._v(" "),a("td",[t._v("#")]),t._v(" "),a("td",[t._v("A class object (Class)")])]),t._v(" "),a("tr",[a("td",[t._v("l")]),t._v(" "),a("td",[t._v("A longl is treated as a 32-bit quantity on 64-bit programs.")]),t._v(" "),a("td",[t._v(":")]),t._v(" "),a("td",[t._v("A method selector (SEL)")])]),t._v(" "),a("tr",[a("td",[t._v("q")]),t._v(" "),a("td",[t._v("A long long")]),t._v(" "),a("td",[t._v("[array type]")]),t._v(" "),a("td",[t._v("An array")])]),t._v(" "),a("tr",[a("td",[t._v("C")]),t._v(" "),a("td",[t._v("An unsigned char")]),t._v(" "),a("td",[t._v("{name=type...}")]),t._v(" "),a("td",[t._v("A structure")])]),t._v(" "),a("tr",[a("td",[t._v("I")]),t._v(" "),a("td",[t._v("An unsigned int")]),t._v(" "),a("td",[t._v("(name=type...)")]),t._v(" "),a("td",[t._v("A union")])]),t._v(" "),a("tr",[a("td",[t._v("S")]),t._v(" "),a("td",[t._v("An unsigned short")]),t._v(" "),a("td",[t._v("bnum")]),t._v(" "),a("td",[t._v("A bit field of num bits")])]),t._v(" "),a("tr",[a("td",[t._v("L")]),t._v(" "),a("td",[t._v("An unsigned long")]),t._v(" "),a("td",[t._v("^type")]),t._v(" "),a("td",[t._v("A pointer to type")])]),t._v(" "),a("tr",[a("td",[t._v("Q")]),t._v(" "),a("td",[t._v("An unsigned long long")]),t._v(" "),a("td",[t._v("?")]),t._v(" "),a("td",[t._v("An unknown type (among other things, this code is used for function pointer)")])]),t._v(" "),a("tr",[a("td",[t._v("f")]),t._v(" "),a("td",[t._v("A float")]),t._v(" "),a("td",[t._v("d")]),t._v(" "),a("td",[t._v("A double")])]),t._v(" "),a("tr",[a("td",[t._v("B")]),t._v(" "),a("td",[t._v("A C++ bool or a C99 _Bool")]),t._v(" "),a("td",[t._v("v")]),t._v(" "),a("td",[t._v("A void")])])])]),t._v(" "),a("h3",{attrs:{id:"方法缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法缓存"}},[t._v("#")]),t._v(" 方法缓存")]),t._v(" "),a("p",[t._v("Class 内部结构中有个方法缓存（cache_t），调用了方法之后会缓存在里面，他用散列表（哈希表）来缓存曾经调用过的方法，可以提高方法的查找速度")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/ios/runtime/cache-t.png",alt:"cache_t"}})]),t._v(" "),a("p",[t._v("这里的散列表的原理就是，通过 @selector(methodName) & _mask 获得一个索引值，通过这个索引就能很快在 buckets 中拿到对应的 bucket_t(key, _imp)")]),t._v(" "),a("ul",[a("li",[t._v("存放：如果生成的索引在 buckets 下已经存在 data 。那么他会把 index - 1，减到零了还没有空闲位置，它会从数组最大值开始继续往前找位置，直到有位置")]),t._v(" "),a("li",[t._v("获取：在拿到 bucket_t 后，会比较一下 key 与 @selector(methodName) 是否对应，如果不对应，那就回按照存放的那样方式一个一个找。如果存满了，buckets 就会走扩容")])]),t._v(" "),a("p",[t._v("这就是空间换时间")]),t._v(" "),a("h3",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("h4",{attrs:{id:"id是什么-id和void-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id是什么-id和void-区别"}},[t._v("#")]),t._v(" id是什么，id和void *区别")]),t._v(" "),a("ul",[a("li",[t._v("id: typedef struct objc_object *id;我们创建的一个对象或一个实例，其实就是一个objc_object结构体指针，而我们常用的id也是这个结构体指针。")]),t._v(" "),a("li",[t._v("区别\n"),a("ul",[a("li",[t._v("void* 是c语言中的泛型指针，指代任意的指针类型。当返回值是一个地址或者指针的时候，返回值可以用void*表示，也可以用此类型来定义任意类型的指针变量表示“对带有无类型/未知内容的某些随机块内存的引用”，只是一个指针，无法编辑指向地址上的内容。")]),t._v(" "),a("li",[t._v("id是OC语音中的泛型指针，指代任意对象类型的指针。当返回值是一个对象指针的时候，返回值类型都可以用id表示，也可以用此类型来定义任意类型的对象指针变量。表示“对未知类的一些随机Objective-C对象的引用”")])])])]),t._v(" "),a("h4",{attrs:{id:"什么是元类-为什么要这么设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是元类-为什么要这么设计"}},[t._v("#")]),t._v(" 什么是元类？为什么要这么设计？")]),t._v(" "),a("p",[t._v("元类，和类对象一样，也是一个对象。它存储了一个类的所有类方法。"),a("br"),t._v("\n元类使用基类的元类作为他们的类，而所有类的基类都是NSObject（大多数），所以大多数元类使用NSObject的元类作为它的类。"),a("br"),t._v("\n基类的元类就是它自己的类（isa指向自己）")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/ios/runtime/objc-class.png",alt:"objc-class"}})]),t._v(" "),a("h2",{attrs:{id:"消息机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息机制"}},[t._v("#")]),t._v(" 消息机制")]),t._v(" "),a("p",[t._v("首先编译器将方法调用编译为objc_msgSend(obj, @selector(methodName));")]),t._v(" "),a("ul",[a("li",[t._v("obj 消息接受者")]),t._v(" "),a("li",[t._v("@selector(methodName) 消息名称")])]),t._v(" "),a("p",[t._v("objc_msgSend 的执行流程可以分为 3 大阶段")]),t._v(" "),a("ul",[a("li",[t._v("消息发送")]),t._v(" "),a("li",[t._v("找不到消息发送方法，就会进入动态方法解析，允许开发者动态创建新方法")]),t._v(" "),a("li",[t._v("如果动态方法解析没有做任何操作，这时候开始进入消息转发")])]),t._v(" "),a("p",[t._v("如果三个阶段都没找到合适的方法调用，就会报错： "),a("code",[t._v("unrecognized selector sent to instance")])]),t._v(" "),a("h3",{attrs:{id:"消息发送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息发送"}},[t._v("#")]),t._v(" 消息发送")]),t._v(" "),a("ol",[a("li",[t._v("通过obj的isa指针找到obj对应的class对象")]),t._v(" "),a("li",[t._v("在class对象的cache中通过SEL查找对应的函数method")]),t._v(" "),a("li",[t._v("若cache中找到，直接通过method中的函数指针跳转到对应函数执行。若找不到，去class_rw_t中的methods找")]),t._v(" "),a("li",[t._v("若methods中找到，则将method加入到cache中，方便下次查找，并通过method中的函数指针跳转到对应函数执行。若找不到，则去superClass中查找")]),t._v(" "),a("li",[t._v("若superClass中找到，则将method加入到cache中，方便下次查找，并通过method中的函数指针跳转到对应函数执行。若找不到，依次通过superClass查找，最后都找不到则进入动态解析流程。")])]),t._v(" "),a("FlowChart",{attrs:{id:"flowchart_64a558ee",code:t.$dataBlock.flowchart_64a558ee,preset:"vue"}}),a("h3",{attrs:{id:"动态方法解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态方法解析"}},[t._v("#")]),t._v(" 动态方法解析")]),t._v(" "),a("ol",[a("li",[t._v("动态方法解析：向当前类发送resolveInstanceMethod：或resolveClassMehtod: 消息，检查是否动态向该类添加了方法。")]),t._v(" "),a("li",[t._v("动态解析后，会重新走“消息发送”的流程，从receiverClass的cache中查找方法这一步开始执行")])]),t._v(" "),a("FlowChart",{attrs:{id:"flowchart_64a558a4",code:t.$dataBlock.flowchart_64a558a4,preset:"vue"}}),a("h3",{attrs:{id:"消息转发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息转发"}},[t._v("#")]),t._v(" 消息转发")]),t._v(" "),a("ol",[a("li",[t._v("快速消息转发：检查该类是否实现了forwardingTargetForSelector：方法，若实现了，则调这个方法。若该方法返回非nil且非self，则向该返回对象重新进行发送消息")]),t._v(" "),a("li",[t._v("标准消息转发：runtime发送methodSignatureForSelector：消息获得selector对应的方法签名。若返回值非空，则通过forwardInvocation：转发消息。若返回为空，则向当前对象发送doesNotRecognizeSelector:消息，程序崩溃退出。")])]),t._v(" "),a("FlowChart",{attrs:{id:"flowchart_64a55830",code:t.$dataBlock.flowchart_64a55830,preset:"vue"}}),a("h2",{attrs:{id:"runtime应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runtime应用"}},[t._v("#")]),t._v(" Runtime应用")]),t._v(" "),a("h3",{attrs:{id:"字典转模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典转模型"}},[t._v("#")]),t._v(" 字典转模型")]),t._v(" "),a("ul",[a("li",[t._v("利用 Runtime 遍历所有的属性或者成员变量")]),t._v(" "),a("li",[t._v("利用 KVC 设值")])]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instancetype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initWithDict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("dict "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        objc_property_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("propertys "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("class_copyPropertyList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            objc_property_t property "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" propertys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过 property_getName 函数获得属性的名称")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("property_getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("nameStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString alloc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithUTF8String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            id value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dict objectForKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nameStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" setValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("value forKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nameStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propertys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h3",{attrs:{id:"替换方法实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换方法实现"}},[t._v("#")]),t._v(" 替换方法实现")]),t._v(" "),a("p",[t._v("替换方法实现常用的两个方法：")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法替换")]),t._v("\nIMP "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("class_replaceMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SEL name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" IMP imp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法交换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method_exchangeImplementations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Method m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Method m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"对象自动归档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象自动归档"}},[t._v("#")]),t._v(" 对象自动归档")]),t._v(" "),a("p",[t._v("用 Runtime 提供的函数遍历 Model 自身所有属性，并对属性进行 encode 和 decode 操作")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initWithCoder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSCoder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("aDecoder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Ivar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ivars "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("class_copyIvarList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Ivar ivar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ivars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithUTF8String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ivar_getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ivar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" setValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("aDecoder decodeObjectForKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" forKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("encodeWithCoder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSCoder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("aCoder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Ivar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ivars "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("class_copyIvarList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Ivar ivar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ivars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithUTF8String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ivar_getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ivar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("aCoder encodeObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" valueForKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" forKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("h3",{attrs:{id:"分类添加属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类添加属性"}},[t._v("#")]),t._v(" 分类添加属性")]),t._v(" "),a("p",[t._v("category里面无法添加实例变量，但是我们很多时候需要在category中添加和对象关联的值，这个时候就需要用到关联对象来实现了。")]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("setAddName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addName "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("objc_setAssociatedObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OBJC_ASSOCIATION_COPY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addName "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("objc_getAssociatedObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);s.default=r.exports}}]);