(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{650:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("这篇文章之前在公司技术公众号发表过，今天转移到自己的blog来。原地址："),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/npkoQtdnmx6JXymHNil_rw",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://mp.weixin.qq.com/s/npkoQtdnmx6JXymHNil_rw"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("随着业务的扩张，RN等新技术的引入，App进行着高速的版本迭代。技术面对业务的变更越来越频繁，App体量越来越大，功能也越来越复杂....\n"),s._v("\n开发人员面临的几大痛点：业务相互依赖过于紧密、多人同时开发、第三方依赖升级困难、手动打包。为了解决这些问题，从2017年开始，我们对应用整体的架构进行了重新的设计、对开发模式进行了非常重要的改变，开始进入组件化时代。开发方式从多人集中开发转变为松耦合的组件化开发。组件化方案解决了页面跳转的耦合、业务相互依赖的耦合。实现了组件的独立开发、独立发布。并实现App自动化的构建和发布。")]),s._v(" "),a("h2",{attrs:{id:"_1-蜂巢架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-蜂巢架构"}},[s._v("#")]),s._v(" 1. 蜂巢架构")]),s._v(" "),a("p",[s._v("随着组件化的持续进行，也有新的问题暴露了出来，比如：")]),s._v(" "),a("ul",[a("li",[s._v("组件的创建不够规范")]),s._v(" "),a("li",[s._v("组件的发布需要开发人员手动输入命令")]),s._v(" "),a("li",[s._v("组件数量越来越多，需要集中管理")]),s._v(" "),a("li",[s._v("壳工程依赖文件需要频繁维护")]),s._v(" "),a("li",[s._v("App健康缺少有效的监控")])]),s._v(" "),a("p",[s._v("为了解决暴露出来的新问题，提高开发人员的开发效率，蜂巢被提了出来，移动应用的架构也随之得到了演进。")]),s._v(" "),a("p",[s._v("在形成组件化之后，App由一个个组件组合而成，形成高度模块化的工程结构，整个App就像一个蜂巢，而蜂巢的结构带来了无限扩张的可能，所以我们使用蜂巢来命名这个项目。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/2019/component-platform-c1.jpg",alt:"蜂巢架构图2"}})]),s._v(" "),a("h2",{attrs:{id:"_2-关于蜂巢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-关于蜂巢"}},[s._v("#")]),s._v(" 2. 关于蜂巢")]),s._v(" "),a("p",[s._v("蜂巢整体由以下几部分组成：")]),s._v(" "),a("ul",[a("li",[s._v("模板：组件模板基于CocoaPods的pod-template进行二次开发，用于创建App的组件。")]),s._v(" "),a("li",[s._v("脚本工具：基于fastlane创建通用的Fastfile和Action，用于组件的发布、依赖的安装、App的构建、App的发布等")]),s._v(" "),a("li",[s._v("可视化管理平台：管理平台采用Vue+Element UI+Spring Boot的前后端开发框架。包括应用管理、组件管理、构建管理、发布管理、性能监控、配置中心等。")]),s._v(" "),a("li",[s._v("移动API：提供给App调用的API，主要是配置中心和APM的一些接口")]),s._v(" "),a("li",[s._v("其他系统：包括实时数据CAAS系统、Jenkins集群、GitLab、ipapk发布系统、Apollo等")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/2019/component-platform-c2.jpg",alt:"蜂巢架构"}})]),s._v(" "),a("p",[s._v("本文重点从以下几个方面介绍在开发使用蜂巢时的一些技术点。")]),s._v(" "),a("h3",{attrs:{id:"_2-1-组件创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-组件创建"}},[s._v("#")]),s._v(" 2.1 组件创建")]),s._v(" "),a("p",[s._v("最初设想开发一个PC端的工具，开发人员在本地进行创建组件，考虑到Android和iOS的平台差别以及开发人员使用的操作系统不同，最终还是决定在平台上实现组件的创建。")]),s._v(" "),a("p",[s._v("首先，iOS和Android都有自己的组件模板，其中iOS使用CocoaPods的pod-template做二次开发，Android使用自己开发的组件模板。\n其次，创建过程要先从模板所在仓库拉去模板，然后执行模板中的脚本，然后为组件在GitLab上创建仓库，并将组件推送到仓库中。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/2019/component-platform-component-create.jpg",alt:"组件创建时序图"}})]),s._v(" "),a("p",[s._v("其中关键的两点是：")]),s._v(" "),a("ol",[a("li",[s._v("GitLab在内网系统，蜂巢想要访问GitLab又要对App提供网关接口，这就要求平台必须部署在公共测试环境，而网关接口部分就要部署在生产环境。在多系统之间调用上出现了很多问题，踩了不少坑。")]),s._v(" "),a("li",[s._v("iOS模板需要Ruby环境，需要在Linux上安装CocoPods，而且CocoPods执行权限不能为root用户权限，所以Linux上执行初始化脚本的时候需要先切换到指定的普通用户，再执行初始化脚本。")])]),s._v(" "),a("h3",{attrs:{id:"_2-2-组件发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-组件发布"}},[s._v("#")]),s._v(" 2.2 组件发布")]),s._v(" "),a("p",[s._v("组件化之后，所有的业务都被拆分到各个组件中，而且做到组件独立开发、独立编译、独立发布。目前蜂巢已经实现线上自助发布组件的功能，而且在发布之前会对所有代码做静态分析，从而保证代码质量。")]),s._v(" "),a("p",[s._v("iOS：可以发布源码、也可以发布静态Library、动态Framework\nAndroid：可以发布SNAPSHOT，也可以发布Release。")]),s._v(" "),a("p",[s._v("在组件发布方面，iOS也是遇到了很大的挑战。在使用蜂巢之前，组件的编译、发布都是使用Fastlane和自定义的Action在每个开发者本地进行的，如果在平台上做，还要考虑大家多任务并行的情况。这就需要有任务队列。这时候我们想到App的编译、发布也是用的Fastlane和自定义的Action，而且是使用Jenkins Job执行编译打包脚本。那我们的组件的发布也可以在Jenkins上来做，Jenkins来执行发布脚本，而且Jenkins本身就有队列管理，我们只需要建立一个Job池，当组件发布时，从Job池中选择空闲的Job来执行发布任务，而且Job池也可以随着业务的发展做快速的扩充。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/2019/component-platform-component-publish.jpg",alt:"组件发布时序图"}})]),s._v(" "),a("p",[s._v("组件的发布借鉴了App的发布，并创建了Job池，而发布过程中关键点还是之前就已经准备好的Fastlane脚本，我们支持了发布源码、发布静态Library，发布Framework。未来还会增加React Native组件的发布。")]),s._v(" "),a("p",[s._v("在CocoPods 1.5版本之前，我们发布的组件均为源码或者Framework，值得注意的事，如果代码是swift，swiftmodule也要copy到Framework中。")]),s._v(" "),a("div",{staticClass:"language-ruby line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("simulator_swift_module "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("simulator_framework"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v("/Modules/"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("build_target"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v('.swiftmodule/."')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exist"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("simulator_swift_module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n copy_swift_module_command "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cp -R '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("simulator_swift_module"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("target_framework"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v("/Modules/"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("build_target"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v('.swiftmodule"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Actions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("copy_swift_module_command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("在架构演进的过程中，我们的组件二进制化从Framework转为静态库，有了这些支持，所有组件的转换用了很少的时间就可以转换完成。")]),s._v(" "),a("p",[s._v("此外，在组件发布过程中，我们还引入了Facebook的infer，来做静态检查，可以检测资源泄露、内存泄露、循环引用、空引用、参数不能为空检查，本地变量不能为空检查。")]),s._v(" "),a("h3",{attrs:{id:"_2-3-app依赖管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-app依赖管理"}},[s._v("#")]),s._v(" 2.3 App依赖管理")]),s._v(" "),a("p",[s._v("在组件化的壳工程或者传统的项目中，Podfile文件中为target设置了一条一条的依赖，并经常被反复修改。在拍拍贷理财App中有100多个组件，为了避免这种现象的出现，我们通过PPDBIU脚本请求依赖列表，并进行依赖的安装。")]),s._v(" "),a("p",[s._v("现在的做法只需要两行代码，再也不需要频繁修改依赖文件了：")]),s._v(" "),a("div",{staticClass:"language-ruby line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("require")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ppdbiu'")]),s._v("\n\nmakeup_pods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://xxxxxxx.xxx/dep/list'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'applicationVersionId'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pageSize'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'99999'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'POST'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("而依赖的组件以及组件的版本修改只需要在平台上进行更改即可。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/2019/component-platform-app-dependency.png",alt:"依赖列表1"}})]),s._v(" "),a("p",[s._v("在App构建的过程中，makeup_pods会根据参数去请求依赖列表，然后将依赖进行安装，从而达到和以前一样的效果。")]),s._v(" "),a("p",[s._v("核心处理如下：")]),s._v(" "),a("div",{staticClass:"language-ruby line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ppd_pod")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dependencies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ignores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      dependencies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("each")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n        componentName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dependencyName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略组件名称不存的依赖")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unless")]),s._v(" componentName\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跳过在ignores列表中的依赖")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("next")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ignores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" componentName\n\n        version "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"componentVersion"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" version\n          pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("componentName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n          hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("each")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("rKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rValue"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":git")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gitUrl"')]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":branch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"componentBranch"')]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag"')]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit"')]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"configuration"')]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path"')]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":podspec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"podspec"')]),s._v("\n            hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":subspecs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subspecs"')]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("componentName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h4",{attrs:{id:"_2-4-应用发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-应用发布"}},[s._v("#")]),s._v(" 2.4 应用发布")]),s._v(" "),a("p",[s._v("应用的发布在iOS和Android直接差异还是蛮大的。")]),s._v(" "),a("p",[s._v("首先App构建完成后，我们会将构建产物通过ssh上传到指定服务器目录，当发布的时候，通过接口调用服务器目录下的发布脚本，将应用进行发布到内测平台、TestFlight、阿里云及共享目录。")]),s._v(" "),a("p",[s._v("对于内测发布，Android和iOS均发布到ipapk发布系统，平台提供二维码，测试人员在平台上可以直接扫描二维码进行下载，而且Android还要支持多渠道发布。")]),s._v(" "),a("p",[s._v("对于生产发布，iOS通过脚本发布到TestFlight，Android首先发布到阿里云，再在阿里云上执行生成渠道包的脚本。为了方便运营人员上传渠道包到各个商店，蜂巢提供两种方式供运营人员下载渠道包：")]),s._v(" "),a("ol",[a("li",[s._v("生成渠道包后，平台生成渠道包下载链接，可以在蜂巢上直接下载。")]),s._v(" "),a("li",[s._v("渠道包拷贝到指定共享目录，可以在共享目录拷贝渠道包。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/2019/component-platform-app-publish.jpg",alt:"应用发布流程"}})]),s._v(" "),a("p",[s._v("在应用发布的实践过程中也踩了许多的坑：")]),s._v(" "),a("ul",[a("li",[s._v("应用发布脚本为Fastlane，此Ruby库需要的环境只能在Mac上执行，我们就必须将构建产物在Mac上备份，而且还要部署一个站点提供API供蜂巢调用来发布。")]),s._v(" "),a("li",[s._v("阿里云发布需要ssh上传并执行脚本，ssh的权限以及目录需要动态配置。")]),s._v(" "),a("li",[s._v("Fastlane发布到TestFlight需要二次校验，session过期等。")])]),s._v(" "),a("h4",{attrs:{id:"_2-5-配置中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-配置中心"}},[s._v("#")]),s._v(" 2.5 配置中心")]),s._v(" "),a("p",[s._v("配置中心提供对线上App功能的动态配置，配置内容的数据结构兼顾统一性和个性化。")]),s._v(" "),a("ul",[a("li",[s._v("配置中心的数据采用"),a("strong",[s._v("Key-List-Object")]),s._v("三层数据结构。也就是说配置数据整体是一个Map，Map中每一项都是一个List，而List中的项则不规定数据结构，可以自由发挥。")]),s._v(" "),a("li",[s._v("为了支持多版本的需求，还需要设计"),a("strong",[s._v("平台-应用-版本-模块")]),s._v("的元信息模型。")])]),s._v(" "),a("p",[s._v("元信息模型和数据模型结合起来组成了完整的配置中心数据模型。")]),s._v(" "),a("p",[s._v("另外配置内容还支持导入、导出以及多版本同步修改功能，从而简化配置操作。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/2019/component-platform-config-center.png",alt:"配置中心1"}})]),s._v(" "),a("p",[s._v("同样的，配置中心在App端也提供一个组件来获取配置内容且支持增量更新，同时提供友好的API给业务组件来调用获取配置内容，开发人员不再关注配置是如何下发的，如何保存的，只需要关注自己配置的key和value。比如获取WebView组件的URL缓存策略：")]),s._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[s._v("NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("configItem "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ConfigCenter configItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"cacheRegex"')]),s._v(" ofComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"LenderWeb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nNSArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("cacheRegexArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("configItem objectFromJSONString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("通过集成App整个开发周期的管理，App的开发迭代和测试分发效率得到了一定程度的提升，相对于之前有了明显的改变：")]),s._v(" "),a("ul",[a("li",[s._v("App依赖组件得到可视化的配置，依赖文件不需要频繁修改，减少了出错的概率")]),s._v(" "),a("li",[s._v("组件的创建更加规范，不同类型的组件都统一了前缀，并根据模板自动创建工程和仓库")]),s._v(" "),a("li",[s._v("组件的发布不再需要开发人员输入命令，完全做到自动化发布")]),s._v(" "),a("li",[s._v("App的构建和发布统一在平台上完成，不再需要切换到Jenkins上去手动执行")])]),s._v(" "),a("p",[s._v("虽然蜂巢在开发阶段解决了开发人员的痛点，但是系统在还存在一些不足，比如远程日志、Memory Dump和Method Trace等问题，我们此前开发过一版APM的组件和平台对应的功能，包括Crash、Abort、卡顿、网络等，但目前还不够完善和强大，我们小伙伴也正在努力完善这块的功能，后续在使用中逐步将平台做的更好。")])])}),[],!1,null,null,null);t.default=e.exports}}]);