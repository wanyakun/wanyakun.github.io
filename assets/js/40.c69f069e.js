(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{519:function(s,a,t){"use strict";t.r(a);var r=t(7),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("随着组件越来越多，壳工程打包依赖的组件每次都要重新编译，为了提高编译速度，将组件进行二进制化势在必行。而我们App是从8.0开始支持。所以我们组件二进制化采用static library和部分dynamic framework的方式。")]),s._v(" "),t("h2",{attrs:{id:"组件二进制方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件二进制方案"}},[s._v("#")]),s._v(" 组件二进制方案")]),s._v(" "),t("ul",[t("li",[s._v("多仓库模式管理：源码使用一个仓库，framework、static library使用一个仓库，或者和framework、static library集中使用一个仓库，通过subspec管理。缺点：需要额外维护仓库")]),s._v(" "),t("li",[s._v("podspec宏管理：podspec部分代码如下，根据命令环境IS_SOURCE来决定是用源码还是framework、static library")])]),s._v(" "),t("div",{staticClass:"language-ruby line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ENV")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IS_SOURCE'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("source_files "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MFSIdentifier/*.{h,m}'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MFSIdentifier/**/*.{h,m}'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("source_files "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SDK/**/*.{h}'")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ios"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vendored_frameworks "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SDK/*.framework'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("缺点：在切换源码和framework、static library的时候会切换算有的组件，不能单独切换某个组件")]),s._v(" "),t("ul",[t("li",[s._v("单仓库、多podspec文件管理：在组件中增加一个目录存储发布framework的podspec和framework, 一个目录存储static library的podspec和.h .a文件，发布时使用不同的podspec文件。一般只发布framework、static library，源码直接用git地址做调试。（最好是发布一个源码一个framework的版本，通过Version后缀区分，但fastlane修改podspec版本命令目前不指定后缀，所以暂时没有实现）")])]),s._v(" "),t("p",[s._v("我们采用第三种方式，未来fastlane若支持版本号可以带后缀，可以升级framework和源码的切换方法。")]),s._v(" "),t("h2",{attrs:{id:"组件模板的变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件模板的变化"}},[s._v("#")]),s._v(" 组件模板的变化")]),s._v(" "),t("p",[s._v("为了更好支持组件二进制化，对组件模板进行了一下修改：")]),s._v(" "),t("ul",[t("li",[s._v("增加lib目录，里面增加NAME.podspec, 发布static Library时使用此podspec进行发布")]),s._v(" "),t("li",[s._v("增加fmk目录，里面增加NAME.podspec，发布Framework组件时使用此podspec进行发布")]),s._v(" "),t("li",[s._v("fastlane目录中的Fastfile文件增加publish_fmk和publish_lib命令，用来发布framework和static library组件，用法和publish命令一样。"),t("code",[s._v("fastlane publish_fmk version:1.1.0")]),s._v(", "),t("code",[s._v("fastlane publish_lib version:1.1.0")])]),s._v(" "),t("li",[s._v("其他ruby脚本修改等。")])]),s._v(" "),t("h2",{attrs:{id:"组件项目的变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件项目的变化"}},[s._v("#")]),s._v(" 组件项目的变化")]),s._v(" "),t("p",[s._v("使用组件模板创建新组件后会在Example项目中增加FMK Podspec Metadata目录，里面为上一步组件模板中提到的发布framework组件使用的podspec，发布framework组件时根据修改进行更改。\n"),t("img",{attrs:{src:"/assets/img/2017/component-project.png",alt:"component-project"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/2017/component-lib-podspec.png",alt:"component-lib-podspec"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/2017/component-fmk-podspec.png",alt:"component-fmk-podspec"}})]),s._v(" "),t("h2",{attrs:{id:"发布命令的变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布命令的变化"}},[s._v("#")]),s._v(" 发布命令的变化")]),s._v(" "),t("ol",[t("li",[s._v("发布framework组件使用新的发布命令："),t("code",[s._v("fastalne publish_fmk version:1.1.0")]),s._v(", 发布static library组件使用新的发布命令："),t("code",[s._v("fastalne publish_lib version:1.1.0")]),s._v(", 旧的"),t("code",[s._v("fastalne publish version:1.1.0")]),s._v("依然可以使用，组件发布为源码。")]),s._v(" "),t("li",[s._v("build_framework命令调整，调整为build_fmk和build_lib，目标二进制文件到fmk和lib目录。")])]),s._v(" "),t("h2",{attrs:{id:"发布过程的变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布过程的变化"}},[s._v("#")]),s._v(" 发布过程的变化")]),s._v(" "),t("p",[s._v("framework发布过程如下：\n"),t("img",{attrs:{src:"/assets/img/2017/component-fmk-publish.jpg",alt:"component-fmk-publish"}})]),s._v(" "),t("p",[s._v("主要增加了一下步骤：")]),s._v(" "),t("ul",[t("li",[t("ol",{attrs:{start:"10"}},[t("li",[s._v("修改fmk目录下的podspec文件，修改version")])])]),s._v(" "),t("li",[s._v("13、14、15切换到build_framework命令进行archive和build，然后将二进制文件合并，最后放到fmk目录")]),s._v(" "),t("li",[s._v("使用fmk目录下的podspec进行发布")])]),s._v(" "),t("p",[s._v("static library发布过程类似。")]),s._v(" "),t("h2",{attrs:{id:"组件使用的变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件使用的变化"}},[s._v("#")]),s._v(" 组件使用的变化")]),s._v(" "),t("p",[s._v("组件framework后，若需要对组件进行调试，可以切换到源码模式，可以在Podfile中设置git路径切换到源码。")])])}),[],!1,null,null,null);a.default=e.exports}}]);